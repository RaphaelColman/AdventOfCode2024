Solution:
Register A: 52884621
Register B: 0
Register C: 0

Program:[2,4,1,3,7,5,4,7,0,3,1,5,5,5,3,0]
Pointer: 0
Output: []

-- Mod reg A -> B

Register A: 52884621
Register B: 5
Register C: 0

Program:[2,4,1,3,7,5,4,7,0,3,1,5,5,5,3,0]
Pointer: 2
Output: []

-- XOR Reg B (5) with literal 3 = 6

Register A: 52884621
Register B: 6
Register C: 0

Program:[2,4,1,3,7,5,4,7,0,3,1,5,5,5,3,0]
Pointer: 4
Output: []

-- C.Divide regA / combo 5 -> 52884621 / 2^6 = 826322
--so regA/ 2^regB
--Combo operand 5 -> bReg = 6

OK so at the beginning of the loop, it does not matter what is in regB and regC. They will be overwritten.

Register A: 52884621
Register B: 6
Register C: 826322

Program:[2,4,1,3,7,5,4,7,0,3,1,5,5,5,3,0]
Pointer: 6
Output: []

-- Bxc: 6 `xor` 826322 = 826324 (into bReg)
-- bReg `xor` cReg -> bReg

Register A: 52884621
Register B: 826324
Register C: 826322

Program:[2,4,1,3,7,5,4,7,0,3,1,5,5,5,3,0]
Pointer: 8
Output: []

-- A.Divide : 52884621 / 2^3 = 6610577.625 -> A reg
--Combo operarand 3 -> 3

Register A: 6610577
Register B: 826324
Register C: 826322

Program:[2,4,1,3,7,5,4,7,0,3,1,5,5,5,3,0]
Pointer: 10
Output: []

-- bxl: 826324 `xor` 5 = 2 (into bReg) = 826321

Register A: 6610577
Register B: 826321
Register C: 826322

Program:[2,4,1,3,7,5,4,7,0,3,1,5,5,5,3,0]
Pointer: 12
Output: []

--Output (5,5) -> Output 826321 `mod` 8 = 1
--Combo operand: 5 -> bReg = 826321
HMMM I would need this to = 2 somehow.

Register A: 6610577
Register B: 826321
Register C: 826322

Program:[2,4,1,3,7,5,4,7,0,3,1,5,5,5,3,0]
Pointer: 14
Output: [1]

--Jump back to beginning

Register A: 6610577
Register B: 826321
Register C: 826322

Program:[2,4,1,3,7,5,4,7,0,3,1,5,5,5,3,0]
Pointer: 0
Output: [1]

Register A: 6610577
Register B: 1
Register C: 826322

Program:[2,4,1,3,7,5,4,7,0,3,1,5,5,5,3,0]
Pointer: 2
Output: [1]

Register A: 6610577
Register B: 2
Register C: 826322

Program:[2,4,1,3,7,5,4,7,0,3,1,5,5,5,3,0]
Pointer: 4
Output: [1]

Register A: 6610577
Register B: 2
Register C: 1652644

Program:[2,4,1,3,7,5,4,7,0,3,1,5,5,5,3,0]
Pointer: 6
Output: [1]

Register A: 6610577
Register B: 1652646
Register C: 1652644

Program:[2,4,1,3,7,5,4,7,0,3,1,5,5,5,3,0]
Pointer: 8
Output: [1]

Register A: 826322
Register B: 1652646
Register C: 1652644

Program:[2,4,1,3,7,5,4,7,0,3,1,5,5,5,3,0]
Pointer: 10
Output: [1]

Register A: 826322
Register B: 1652643
Register C: 1652644

Program:[2,4,1,3,7,5,4,7,0,3,1,5,5,5,3,0]
Pointer: 12
Output: [1]

Register A: 826322
Register B: 1652643
Register C: 1652644

Program:[2,4,1,3,7,5,4,7,0,3,1,5,5,5,3,0]
Pointer: 14
Output: [3,1]

Register A: 826322
Register B: 1652643
Register C: 1652644

Program:[2,4,1,3,7,5,4,7,0,3,1,5,5,5,3,0]
Pointer: 0
Output: [3,1]

Register A: 826322
Register B: 2
Register C: 1652644

Program:[2,4,1,3,7,5,4,7,0,3,1,5,5,5,3,0]
Pointer: 2
Output: [3,1]

Register A: 826322
Register B: 1
Register C: 1652644

Program:[2,4,1,3,7,5,4,7,0,3,1,5,5,5,3,0]
Pointer: 4
Output: [3,1]

Register A: 826322
Register B: 1
Register C: 413161

Program:[2,4,1,3,7,5,4,7,0,3,1,5,5,5,3,0]
Pointer: 6
Output: [3,1]

Register A: 826322
Register B: 413160
Register C: 413161

Program:[2,4,1,3,7,5,4,7,0,3,1,5,5,5,3,0]
Pointer: 8
Output: [3,1]

Register A: 103290
Register B: 413160
Register C: 413161

Program:[2,4,1,3,7,5,4,7,0,3,1,5,5,5,3,0]
Pointer: 10
Output: [3,1]

Register A: 103290
Register B: 413165
Register C: 413161

Program:[2,4,1,3,7,5,4,7,0,3,1,5,5,5,3,0]
Pointer: 12
Output: [3,1]

Register A: 103290
Register B: 413165
Register C: 413161

Program:[2,4,1,3,7,5,4,7,0,3,1,5,5,5,3,0]
Pointer: 14
Output: [5,3,1]

Register A: 103290
Register B: 413165
Register C: 413161

Program:[2,4,1,3,7,5,4,7,0,3,1,5,5,5,3,0]
Pointer: 0
Output: [5,3,1]

Register A: 103290
Register B: 2
Register C: 413161

Program:[2,4,1,3,7,5,4,7,0,3,1,5,5,5,3,0]
Pointer: 2
Output: [5,3,1]

Register A: 103290
Register B: 1
Register C: 413161

Program:[2,4,1,3,7,5,4,7,0,3,1,5,5,5,3,0]
Pointer: 4
Output: [5,3,1]

Register A: 103290
Register B: 1
Register C: 51645

Program:[2,4,1,3,7,5,4,7,0,3,1,5,5,5,3,0]
Pointer: 6
Output: [5,3,1]

Register A: 103290
Register B: 51644
Register C: 51645

Program:[2,4,1,3,7,5,4,7,0,3,1,5,5,5,3,0]
Pointer: 8
Output: [5,3,1]

Register A: 12911
Register B: 51644
Register C: 51645

Program:[2,4,1,3,7,5,4,7,0,3,1,5,5,5,3,0]
Pointer: 10
Output: [5,3,1]

Register A: 12911
Register B: 51641
Register C: 51645

Program:[2,4,1,3,7,5,4,7,0,3,1,5,5,5,3,0]
Pointer: 12
Output: [5,3,1]

Register A: 12911
Register B: 51641
Register C: 51645

Program:[2,4,1,3,7,5,4,7,0,3,1,5,5,5,3,0]
Pointer: 14
Output: [1,5,3,1]

Register A: 12911
Register B: 51641
Register C: 51645

Program:[2,4,1,3,7,5,4,7,0,3,1,5,5,5,3,0]
Pointer: 0
Output: [1,5,3,1]

Register A: 12911
Register B: 7
Register C: 51645

Program:[2,4,1,3,7,5,4,7,0,3,1,5,5,5,3,0]
Pointer: 2
Output: [1,5,3,1]

Register A: 12911
Register B: 4
Register C: 51645

Program:[2,4,1,3,7,5,4,7,0,3,1,5,5,5,3,0]
Pointer: 4
Output: [1,5,3,1]

Register A: 12911
Register B: 4
Register C: 806

Program:[2,4,1,3,7,5,4,7,0,3,1,5,5,5,3,0]
Pointer: 6
Output: [1,5,3,1]

Register A: 12911
Register B: 802
Register C: 806

Program:[2,4,1,3,7,5,4,7,0,3,1,5,5,5,3,0]
Pointer: 8
Output: [1,5,3,1]

Register A: 1613
Register B: 802
Register C: 806

Program:[2,4,1,3,7,5,4,7,0,3,1,5,5,5,3,0]
Pointer: 10
Output: [1,5,3,1]

Register A: 1613
Register B: 807
Register C: 806

Program:[2,4,1,3,7,5,4,7,0,3,1,5,5,5,3,0]
Pointer: 12
Output: [1,5,3,1]

Register A: 1613
Register B: 807
Register C: 806

Program:[2,4,1,3,7,5,4,7,0,3,1,5,5,5,3,0]
Pointer: 14
Output: [7,1,5,3,1]

Register A: 1613
Register B: 807
Register C: 806

Program:[2,4,1,3,7,5,4,7,0,3,1,5,5,5,3,0]
Pointer: 0
Output: [7,1,5,3,1]

Register A: 1613
Register B: 5
Register C: 806

Program:[2,4,1,3,7,5,4,7,0,3,1,5,5,5,3,0]
Pointer: 2
Output: [7,1,5,3,1]

Register A: 1613
Register B: 6
Register C: 806

Program:[2,4,1,3,7,5,4,7,0,3,1,5,5,5,3,0]
Pointer: 4
Output: [7,1,5,3,1]

Register A: 1613
Register B: 6
Register C: 25

Program:[2,4,1,3,7,5,4,7,0,3,1,5,5,5,3,0]
Pointer: 6
Output: [7,1,5,3,1]

Register A: 1613
Register B: 31
Register C: 25

Program:[2,4,1,3,7,5,4,7,0,3,1,5,5,5,3,0]
Pointer: 8
Output: [7,1,5,3,1]

Register A: 201
Register B: 31
Register C: 25

Program:[2,4,1,3,7,5,4,7,0,3,1,5,5,5,3,0]
Pointer: 10
Output: [7,1,5,3,1]

Register A: 201
Register B: 26
Register C: 25

Program:[2,4,1,3,7,5,4,7,0,3,1,5,5,5,3,0]
Pointer: 12
Output: [7,1,5,3,1]

Register A: 201
Register B: 26
Register C: 25

Program:[2,4,1,3,7,5,4,7,0,3,1,5,5,5,3,0]
Pointer: 14
Output: [2,7,1,5,3,1]

Register A: 201
Register B: 26
Register C: 25

Program:[2,4,1,3,7,5,4,7,0,3,1,5,5,5,3,0]
Pointer: 0
Output: [2,7,1,5,3,1]

Register A: 201
Register B: 1
Register C: 25

Program:[2,4,1,3,7,5,4,7,0,3,1,5,5,5,3,0]
Pointer: 2
Output: [2,7,1,5,3,1]

Register A: 201
Register B: 2
Register C: 25

Program:[2,4,1,3,7,5,4,7,0,3,1,5,5,5,3,0]
Pointer: 4
Output: [2,7,1,5,3,1]

Register A: 201
Register B: 2
Register C: 50

Program:[2,4,1,3,7,5,4,7,0,3,1,5,5,5,3,0]
Pointer: 6
Output: [2,7,1,5,3,1]

Register A: 201
Register B: 48
Register C: 50

Program:[2,4,1,3,7,5,4,7,0,3,1,5,5,5,3,0]
Pointer: 8
Output: [2,7,1,5,3,1]

Register A: 25
Register B: 48
Register C: 50

Program:[2,4,1,3,7,5,4,7,0,3,1,5,5,5,3,0]
Pointer: 10
Output: [2,7,1,5,3,1]

Register A: 25
Register B: 53
Register C: 50

Program:[2,4,1,3,7,5,4,7,0,3,1,5,5,5,3,0]
Pointer: 12
Output: [2,7,1,5,3,1]

Register A: 25
Register B: 53
Register C: 50

Program:[2,4,1,3,7,5,4,7,0,3,1,5,5,5,3,0]
Pointer: 14
Output: [5,2,7,1,5,3,1]

Register A: 25
Register B: 53
Register C: 50

Program:[2,4,1,3,7,5,4,7,0,3,1,5,5,5,3,0]
Pointer: 0
Output: [5,2,7,1,5,3,1]

Register A: 25
Register B: 1
Register C: 50

Program:[2,4,1,3,7,5,4,7,0,3,1,5,5,5,3,0]
Pointer: 2
Output: [5,2,7,1,5,3,1]

Register A: 25
Register B: 2
Register C: 50

Program:[2,4,1,3,7,5,4,7,0,3,1,5,5,5,3,0]
Pointer: 4
Output: [5,2,7,1,5,3,1]

Register A: 25
Register B: 2
Register C: 6

Program:[2,4,1,3,7,5,4,7,0,3,1,5,5,5,3,0]
Pointer: 6
Output: [5,2,7,1,5,3,1]

Register A: 25
Register B: 4
Register C: 6

Program:[2,4,1,3,7,5,4,7,0,3,1,5,5,5,3,0]
Pointer: 8
Output: [5,2,7,1,5,3,1]

Register A: 3
Register B: 4
Register C: 6

Program:[2,4,1,3,7,5,4,7,0,3,1,5,5,5,3,0]
Pointer: 10
Output: [5,2,7,1,5,3,1]

Register A: 3
Register B: 1
Register C: 6

Program:[2,4,1,3,7,5,4,7,0,3,1,5,5,5,3,0]
Pointer: 12
Output: [5,2,7,1,5,3,1]

Register A: 3
Register B: 1
Register C: 6

Program:[2,4,1,3,7,5,4,7,0,3,1,5,5,5,3,0]
Pointer: 14
Output: [1,5,2,7,1,5,3,1]

Register A: 3
Register B: 1
Register C: 6

Program:[2,4,1,3,7,5,4,7,0,3,1,5,5,5,3,0]
Pointer: 0
Output: [1,5,2,7,1,5,3,1]

Register A: 3
Register B: 3
Register C: 6

Program:[2,4,1,3,7,5,4,7,0,3,1,5,5,5,3,0]
Pointer: 2
Output: [1,5,2,7,1,5,3,1]

Register A: 3
Register B: 0
Register C: 6

Program:[2,4,1,3,7,5,4,7,0,3,1,5,5,5,3,0]
Pointer: 4
Output: [1,5,2,7,1,5,3,1]

Register A: 3
Register B: 0
Register C: 3

Program:[2,4,1,3,7,5,4,7,0,3,1,5,5,5,3,0]
Pointer: 6
Output: [1,5,2,7,1,5,3,1]

Register A: 3
Register B: 3
Register C: 3

Program:[2,4,1,3,7,5,4,7,0,3,1,5,5,5,3,0]
Pointer: 8
Output: [1,5,2,7,1,5,3,1]

Register A: 0
Register B: 3
Register C: 3

Program:[2,4,1,3,7,5,4,7,0,3,1,5,5,5,3,0]
Pointer: 10
Output: [1,5,2,7,1,5,3,1]

Register A: 0
Register B: 6
Register C: 3

Program:[2,4,1,3,7,5,4,7,0,3,1,5,5,5,3,0]
Pointer: 12
Output: [1,5,2,7,1,5,3,1]

Register A: 0
Register B: 6
Register C: 3

Program:[2,4,1,3,7,5,4,7,0,3,1,5,5,5,3,0]
Pointer: 14
Output: [6,1,5,2,7,1,5,3,1]

Register A: 0
Register B: 6
Register C: 3

Program:[2,4,1,3,7,5,4,7,0,3,1,5,5,5,3,0]
Pointer: 17
Output: [6,1,5,2,7,1,5,3,1]

[1,3,5,1,7,2,5,1,6]



- Mod 8 Reg A -> B
- XOR Reg B with 3 -> B
- Divide Reg A by 2^Reg B -> C
- XOR B with C -> B
- Divide Reg A by 8 -> A
- XOR B with 5 -> B
- Output B mod 8
- Jump to beginning


On first run, B must become X where X `mod` 8 = 2
